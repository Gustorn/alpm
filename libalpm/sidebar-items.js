initSidebarItems({"enum":[["DownloadResult","The result of a download"],["Error","An enum of possible errors in libalpm"],["Event","An event emitted from libalpm"],["LogLevel","The highest log level marked true"],["PackageFrom","Where a package came from"],["PackageRef","A package in libalpm that can only be held by reference."],["Reason","Why a package was installed, either because it was explicitally requested, or required as a dependency."],["Validation","Whether validation was performed."],["VersionConstraintType","Types of version constraint to be applied to a package's dependency."]],"fn":[["capabilities","Get the capabilities of the attached libalpm"],["version","Get the version of the attached libalpm"]],"mod":[["util","Some helper functions not directly related to the API"]],"struct":[["Alpm","A handle on an alpm instance"],["Backup","A backup"],["Caps","This version of libalpm's capabilities"],["Db","A database of packages. This is only ever available as a reference"],["Dependency","A package's dependency"],["File","A file in a package"],["FileList","A list of files in a package"],["Group","A group of related pacakges in a database"],["LogLevels","The possible log-levels"],["Options","The options that can be set in the pacman conf file."],["Package","An owning version of Package"],["PackageVersion","A package version"],["RepoOptions","Options for a repository."],["SigLevel","PGP signature verification options"],["Transaction","A transaction of package operations"],["TransactionFlags",""],["ValidationMethod","The methods used to validate a package when it was downloaded."]],"type":[["AlpmResult","The ubiquitous crate result type."]]});